!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n),t.d(n,"start",function(){return u});var r=t(1),o=t(2);function i(e){var n=r(),t=e.getAttribute("name"),i=o[t],u=i.nodeCoordinates,c=i.graph.links;n.deserialize(i.graph);var a=new PIXI.Application({width:e.getAttribute("width"),height:e.getAttribute("height"),antialias:!0});document.body.appendChild(a.view);var f=PIXI.Sprite.fromImage(i.image);f.anchor.set(.5),f.x=a.screen.width/2,f.y=a.screen.height/2,a.stage.addChild(f);let d=new PIXI.Graphics;d.lineStyle(2),c.forEach(e=>{let n=u[e.source],t=u[e.target];d.moveTo(n.x,n.y),d.lineTo(t.x,t.y)}),n.nodes().forEach(e=>{let n=u[e];d.beginFill(),d.drawCircle(n.x,n.y,10),d.endFill()}),a.stage.addChild(d)}function u(){document.querySelectorAll("neuronsanim").forEach(i)}u()},function(e,n){e.exports=function(e){var n={addNode:o,removeNode:function(e){return Object.keys(t).forEach(function(n){t[n].forEach(function(t){t===e&&s(n,t)})}),delete t[e],n},nodes:i,adjacent:u,addEdge:d,removeEdge:s,setEdgeWeight:a,getEdgeWeight:f,indegree:function(e){var n=0;function r(t){t===e&&n++}return Object.keys(t).forEach(function(e){t[e].forEach(r)}),n},outdegree:function(e){return e in t?t[e].length:0},depthFirstSearch:h,topologicalSort:function(e,n){return h(e,n).reverse()},shortestPath:function(e,n){var t={},r={},o={};function c(){var e,n=1/0;return Object.keys(o).forEach(function(r){t[r]<n&&(n=t[r],e=r)}),void 0===e?(o={},null):(delete o[e],e)}function a(e,n){var o=f(e,n);t[n]>t[e]+o&&(t[n]=t[e]+o,r[n]=e)}return function(){for(function(){if(i().forEach(function(e){t[e]=1/0}),t[e]!==1/0)throw new Error("Source node is not in the graph");if(t[n]!==1/0)throw new Error("Destination node is not in the graph");t[e]=0}(),i().forEach(function(e){o[e]=!0});0!==Object.keys(o).length;){var r=c();u(r).forEach(function(e){a(r,e)})}}(),function(){for(var t=[],o=0,i=n;r[i];)t.push(i),o+=f(r[i],i),i=r[i];if(i!==e)throw new Error("No path found");return t.push(i),t.reverse(),t.weight=o,t}()},serialize:function(){var e={nodes:i().map(function(e){return{id:e}}),links:[]};return e.nodes.forEach(function(n){var t=n.id;u(t).forEach(function(n){e.links.push({source:t,target:n,weight:f(t,n)})})}),e},deserialize:l},t={},r={};function o(e){return t[e]=u(e),n}function i(){var e={};return Object.keys(t).forEach(function(n){e[n]=!0,t[n].forEach(function(n){e[n]=!0})}),Object.keys(e)}function u(e){return t[e]||[]}function c(e,n){return e+"|"+n}function a(e,t,o){return r[c(e,t)]=o,n}function f(e,n){var t=r[c(e,n)];return void 0===t?1:t}function d(e,t,r){return o(e),o(t),u(e).push(t),void 0!==r&&a(e,t,r),n}function s(e,r){return t[e]&&(t[e]=u(e).filter(function(e){return e!==r})),n}function h(e,n){e||(e=i()),"boolean"!=typeof n&&(n=!0);var t={},r=[];function o(e){t[e]||(t[e]=!0,u(e).forEach(o),r.push(e))}return n?e.forEach(o):(e.forEach(function(e){t[e]=!0}),e.forEach(function(e){u(e).forEach(o)})),r}function l(e){return e.nodes.forEach(function(e){o(e.id)}),e.links.forEach(function(e){d(e.source,e.target,e.weight)}),n}return e&&l(e),n}},function(e){e.exports={fjord:{image:"assets/img/fjord.jpg",graph:{nodes:[{id:"a"},{id:"b"},{id:"c"}],links:[{source:"a",target:"b",weight:1},{source:"b",target:"c",weight:1}]},nodeCoordinates:{a:{x:100,y:100},b:{x:200,y:200},c:{x:300,y:300}}}}}]);